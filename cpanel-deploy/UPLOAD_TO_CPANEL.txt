ðŸš€ MCD ADMIN - cPanel Upload Instructions
===============================================

Your deployment package is ready! Follow these steps:

1. COMPRESS FILES FOR UPLOAD
   --------------------------
   â€¢ Right-click on all files in this folder (cpanel-deploy)
   â€¢ Create a ZIP file (e.g., "mcd-admin.zip")
   â€¢ OR use File Manager to select all and upload directly

2. ACCESS YOUR CPANEL
   ------------------
   â€¢ Log into your cPanel hosting account
   â€¢ Go to File Manager

3. CREATE DIRECTORY & UPLOAD
   -------------------------
   â€¢ Navigate to: public_html/
   â€¢ Create new folder: "mcd-admin" (or your preferred name)
   â€¢ Enter the mcd-admin folder
   â€¢ Upload ALL files from this cpanel-deploy folder

4. SET FILE PERMISSIONS
   --------------------
   â€¢ Select all uploaded files
   â€¢ Set permissions:
     - Folders: 755
     - Files: 644
     - .env file (when created): 600

5. CREATE NODE.JS APPLICATION (CloudLinux)
   ----------------------------------------
   â€¢ Go to: cPanel â†’ Node.js Selector
   â€¢ Click: "Create Application"
   â€¢ Settings:
     * Node.js version: 18.x or latest
     * Application mode: Production
     * Application root: public_html/mcd-admin
     * Application URL: yourdomain.com/mcd-admin
     * Application startup file: index.js
     * Passenger log file: (leave default)
   â€¢ Click "Create"
   
   IMPORTANT: CloudLinux will automatically create a node_modules 
   symlink - do NOT upload any node_modules folder!

6. INSTALL DEPENDENCIES (CloudLinux)
   ----------------------------------
   â€¢ After creating the app, CloudLinux NodeJS Selector will show:
     - "Install dependencies" button OR
     - Terminal access to install packages
   
   Method 1: Use NodeJS Selector Interface
   â€¢ Click "Run NPM Install" in the NodeJS Selector panel
   
   Method 2: Use Terminal
   â€¢ In NodeJS Selector, click "Terminal" button
   â€¢ Run: npm install --production
   
   Method 3: cPanel Terminal
   â€¢ Go to cPanel â†’ Terminal
   â€¢ Run: cd public_html/mcd-admin && npm install --production

7. CONFIGURE ENVIRONMENT
   ----------------------
   â€¢ Rename file: ".env.cpanel" to ".env"
   â€¢ Edit .env file with your settings:
     NODE_ENV=production
     JWT_SECRET=your-secure-random-string-here-change-this
     CORS_ORIGIN=https://yourdomain.com
     PORT=3001

8. START APPLICATION (CloudLinux)
   -------------------------------
   â€¢ In NodeJS Selector panel, click "Restart App" 
   â€¢ Wait for status to show "Running"
   â€¢ The app should automatically start after dependency installation

9. TEST DEPLOYMENT
   ---------------
   â€¢ Visit: https://yourdomain.com/mcd-admin
   â€¢ Should show MCD ADMIN login page
   â€¢ Try logging in with existing credentials

TROUBLESHOOTING (CloudLinux Specific)
=====================================

If you see errors:
â€¢ Check cPanel Error Logs
â€¢ Verify Node.js is enabled on your hosting
â€¢ Ensure all files uploaded correctly
â€¢ Make sure NO node_modules folder exists in your upload
â€¢ Use NodeJS Selector interface for dependency management
â€¢ Check CloudLinux NodeJS documentation
â€¢ Contact hosting support if Node.js Selector not available

CloudLinux NodeJS Selector Notes:
â€¢ Dependencies are managed in a separate virtual environment
â€¢ node_modules is created as a symlink automatically
â€¢ Use the NodeJS Selector interface for package management
â€¢ Log files are managed by Passenger

Files in this package:
â€¢ Backend server (index.js)
â€¢ Frontend build (public/ folder)
â€¢ Security config (.htaccess)
â€¢ 503.shtml (custom maintenance/error page)
â€¢ Dependencies list (package.json)
â€¢ Environment template (.env.cpanel)

Your MCD ADMIN system features:
âœ… JWT Authentication
âœ… Green & Dark Theme
âœ… MCD ADMIN Branding  
âœ… Google Sheets Integration
âœ… Driver Management
âœ… Job Processing Dashboard

Good luck with your deployment! ðŸŽ‰

Note about 503.shtml and ErrorDocument
--------------------------------------
â€¢ The included 503.shtml is referenced in .htaccess with:
   ErrorDocument 503 /mcd-admin/503.shtml
â€¢ Make sure the app lives under public_html/mcd-admin so Apache can find this file.
â€¢ If your path differs, edit .htaccess to point ErrorDocument to your folder.
â€¢ This prevents cPanel from logging "File not found [/home/.../public_html/503.shtml]" when the app returns 503 during startup or maintenance.
