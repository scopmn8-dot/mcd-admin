üîß CloudLinux NodeJS Selector - Quick Setup
=============================================

IMPORTANT: Your cPanel uses CloudLinux NodeJS Selector
This requires a different setup process than standard cPanel.

‚úÖ DEPLOYMENT PACKAGE IS READY
Your files are already prepared correctly:
- No node_modules folder (CloudLinux manages this)
- Compatible package.json
- All necessary files included

üöÄ DEPLOYMENT STEPS FOR CLOUDLINUX:

üì¶ OPTION A: GITHUB DOWNLOAD (RECOMMENDED)
1. DOWNLOAD FROM GITHUB
   ‚Ä¢ Go to your GitHub repository
   ‚Ä¢ Click "Code" ‚Üí "Download ZIP"
   ‚Ä¢ Extract the ZIP file to your computer
   ‚Ä¢ Navigate to the cpanel-deploy folder inside

2. UPLOAD FILES
   ‚Ä¢ Go to cPanel ‚Üí File Manager
   ‚Ä¢ Navigate to public_html/
   ‚Ä¢ Create folder: mcd-admin
   ‚Ä¢ Upload ALL files from the cpanel-deploy folder
   ‚Ä¢ DO NOT upload any node_modules folder!

üìÅ OPTION B: MANUAL UPLOAD
1. UPLOAD FILES
   ‚Ä¢ Go to cPanel ‚Üí File Manager
   ‚Ä¢ Navigate to public_html/
   ‚Ä¢ Create folder: mcd-admin
   ‚Ä¢ Upload ALL files from this cpanel-deploy folder
   ‚Ä¢ DO NOT upload any node_modules folder!

üîÑ OPTION C: AUTOMATED GITHUB DEPLOYMENT
1. PREPARE REPOSITORY
   ‚Ä¢ Push your project to GitHub repository
   ‚Ä¢ Make sure cpanel-deploy folder is in the root

2. DEPLOY USING GITHUB
   ‚Ä¢ Method 1: Download ZIP from GitHub
     - Go to your repository on GitHub
     - Click "Code" ‚Üí "Download ZIP"  
     - Extract and follow Option A steps above
   
   ‚Ä¢ Method 2: Git Clone (if cPanel has terminal access)
     - SSH into cPanel terminal
     - cd public_html
     - git clone https://github.com/yourusername/your-repo.git
     - mv your-repo/cpanel-deploy/* ./mcd-admin/
     - rm -rf your-repo
   
   ‚Ä¢ Method 3: GitHub Actions Auto-Deploy
     - Create .github/workflows/deploy.yml in your repository
     - Setup FTP credentials in GitHub Secrets
     - Push to main branch triggers automatic deployment

üí° TIP: After any deployment method, continue with step 2 below

2. NODEJS SELECTOR SETUP
   ‚Ä¢ Go to cPanel ‚Üí NodeJS Selector
   ‚Ä¢ Click "Create Application"
   ‚Ä¢ Configuration:
     * App Directory: mcd-admin
     * App URI: mcd-admin (or leave blank for root)
     * Node.js version: Latest available (18.x+)
     * Startup file: index.js

3. INSTALL DEPENDENCIES
   ‚Ä¢ After creating app, NodeJS Selector will show options
   ‚Ä¢ Click "Run NPM Install" button
   ‚Ä¢ Wait for installation to complete
   ‚Ä¢ CloudLinux will create node_modules symlink automatically

4. CONFIGURE ENVIRONMENT
   ‚Ä¢ In File Manager, go to your mcd-admin folder
   ‚Ä¢ Rename .env.cpanel to .env
   ‚Ä¢ Edit .env with your domain:
     CORS_ORIGIN=https://yourdomain.com
     JWT_SECRET=your-secure-secret-here

5. START APPLICATION
   ‚Ä¢ In NodeJS Selector panel
   ‚Ä¢ Click "Restart App"
   ‚Ä¢ Status should show "Running"

6. TEST
   ‚Ä¢ Visit: https://yourdomain.com/mcd-admin
   ‚Ä¢ Should show MCD ADMIN login page

‚ùå COMMON CLOUDLINUX ERRORS:
‚Ä¢ "node_modules folder/file exists" ‚Üí Make sure you didn't upload node_modules
‚Ä¢ "Dependencies not installed" ‚Üí Use NodeJS Selector interface, not manual npm
‚Ä¢ "App not starting" ‚Üí Check startup file path is correct: index.js

‚úÖ WHAT'S INCLUDED IN YOUR PACKAGE:
‚Ä¢ Backend server (index.js)
‚Ä¢ Frontend build (public/ folder)
‚Ä¢ CloudLinux-compatible package.json
‚Ä¢ Security .htaccess file
‚Ä¢ Environment template (.env.cpanel)
‚Ä¢ Google credentials (google-credentials.json)

Your MCD ADMIN features:
üîê JWT Authentication
üé® Green & Dark Theme
üè∑Ô∏è MCD ADMIN Branding
üìä Google Sheets Integration
üöõ Driver Management

Ready to deploy! üöÄ
